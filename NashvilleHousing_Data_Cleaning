
SELECT * from NashvilleHousing


--- Populate Property Address Data

SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress, b.PropertyAddress)
from NashvilleHousing a 
join NashvilleHousing b on a.ParcelID = b.ParcelID
and a.UniqueID <> b.UniqueID
WHERE a.PropertyAddress is NULL

Update a
set PropertyAddress = ISNULL(a.PropertyAddress, b.PropertyAddress)
FROM NashvilleHousing a
join NashvilleHousing b on a.ParcelID = b.ParcelID
and a.UniqueID <> b.UniqueID
WHERE a.PropertyAddress is NULL


--- Breaking out Address into Indiidual Columns ( Address, City, State )

SELECT PropertyAddress, Substring(PropertyAddress, 1, CHARINDEX(',', PropertyAddress ) -1) as Address, 
Substring(PropertyAddress, CHARINDEX(',', PropertyAddress)+1, LEN(PropertyAddress)) as City
from NashvilleHousing

ALTER TABLE NashvilleHousing
ADD Address NVARCHAR(50);

UPDATE NashvilleHousing
SET Address = Substring(PropertyAddress, 1, CHARINDEX(',', PropertyAddress ) -1)

ALTER TABLE NashvilleHousing
ADD City NVARCHAR(50);

UPDATE NashvilleHousing
SET City = Substring(PropertyAddress, CHARINDEX(',', PropertyAddress ) +1, LEN(PropertyAddress))

SELECT PARSENAME(REPLACE(OwnerAddress,',','.'), 1) as State
from NashvilleHousing

Alter TABLE NashvilleHousing
ADD State NVARCHAR(50);

UPDATE NashvilleHousing
SET State = PARSENAME(REPLACE(OwnerAddress,',','.'), 1)

select address, city, state 
from NashvilleHousing


--- Change Y and N to Yes and NO in 'Sold as Vacant' field

SELECT SoldAsVacant,
CASE
    when SoldAsvacant = 'Y' then 'Yes'
    when SoldAsVacant = 'N' then 'No'
    else SoldAsVacant
    END
from NashvilleHousing

UPDATE NashvilleHousing
SET SoldAsVacant = CASE
    when SoldAsvacant = 'Y' then 'Yes'
    when SoldAsVacant = 'N' then 'No'
    else SoldAsVacant
    END

SELECT SoldAsVacant, COUNT(SoldAsVacant) as Total
from NashvilleHousing
GROUP BY SoldAsVacant
ORDER BY 2


--- Remove Duplicates

WITH RownumCTE as (
SELECT *,
    ROW_NUMBER() OVER
    (
        PARTITION BY ParcelID,
        PropertyAddress,
        SalePrice,
        Saledate,
        LegalReference
    ORDER BY UniqueID
    ) as Rownum
    from NashvilleHousing)

DELETE
from RownumCTE
where Rownum > 1


--- Delete Unused Columns

Alter Table NashvilleHousing
Drop COLUMN OwnerAddress, TaxDistrict, PropertyAddress

Select *
FROM NashvilleHousing